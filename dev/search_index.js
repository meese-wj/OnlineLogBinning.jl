var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = OnlineLogBinning","category":"page"},{"location":"#OnlineLogBinning","page":"Home","title":"OnlineLogBinning","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OnlineLogBinning.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OnlineLogBinning]","category":"page"},{"location":"#OnlineLogBinning.BinningAccumulator","page":"Home","title":"OnlineLogBinning.BinningAccumulator","text":"BinningAccumulator{T}() where {T <: Number}\n\nMain data structure for the binning analysis. \n\nContents\n\nLvlAccums::Vector{LevelAccumulator{T}}\nA wrapper around the LevelAccumulators from each binning level\n\n\n\n\n\n","category":"type"},{"location":"#OnlineLogBinning.LevelAccumulator","page":"Home","title":"OnlineLogBinning.LevelAccumulator","text":"LevelAccumulator{T <: Number}\n\nAccumulator structure for a given binning level.\n\nContents\n\nlevel::Int\nRegisters the binning level this accumulator is assigned\nnum_bins::Int \nHow many elements (i.e. bins) have been added to this accumulator\nTaccum::T\nStands for Total Accumulator.\nThis represents the T accumulator for the mean: mean ≡ T / num_bins.\nSaccum::T\nStands for Square Accumulator.\nThis represents the S accumulator for the variance: var ≡ S/(num_bins - 1).\nPaccum::PairAccumulator{T}\nAn outward facing PairAccumulator to meet incoming data streams. \nThis accumulator processes the incoming data and then exports the Tvalue and Svalue into updates for Taccum and Saccum, respectively.\n\n\n\n\n\n","category":"type"},{"location":"#OnlineLogBinning.PairAccumulator","page":"Home","title":"OnlineLogBinning.PairAccumulator","text":"PairAccumulator{T <: Number}\n\nAccumulator that directly faces an incoming data stream. Two values from that stream enter and are processed into the exported values of Tvalue and Svalue.\n\nContents\n\nfullpair::Bool\nA Boolean to keep track of which element of the pair is being accessed. Additionally, when fullpair == true then the contents are exported.\nvalues::MVector{2, T}\nThe individual values taken from the data stream to be processed. Both Tvalue and Svalue rely on them being accessible.\n\n\n\n\n\n","category":"type"},{"location":"#Base.eltype-Union{Tuple{BinningAccumulator{T}}, Tuple{T}} where T","page":"Home","title":"Base.eltype","text":"eltype(::BinningAccumulator{T}) → T\n\nReturns the type parameter for the BinningAccumulator.\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{BinningAccumulator}","page":"Home","title":"Base.length","text":"length(bacc::BinningAccumulator)\n\nReturn the number of LevelAccumulators there are.\n\n\n\n\n\n","category":"method"},{"location":"#Base.push!-Tuple{BinningAccumulator, Any}","page":"Home","title":"Base.push!","text":"push!(bacc::BinningAccumulator, itr)\n\npush! each value of the data stream itr through the BinningAccumulator.\n\n\n\n\n\n","category":"method"},{"location":"#Base.push!-Tuple{BinningAccumulator, Number}","page":"Home","title":"Base.push!","text":"push!(bacc::BinningAccumulator, value::Number)\n\nAdd a single value from the data stream into the online binning analysis. The single value enters at the bin at the lowest level. \n\n\n\n\n\n","category":"method"},{"location":"#Base.push!-Tuple{PairAccumulator, Number}","page":"Home","title":"Base.push!","text":"push!(pacc::PairAccumulator, value::Number)\n\nOverload Base.push! for a PairAccumulator. One can only  push! a single value <: Number at a time into this type of accumulator.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, BinningAccumulator}","page":"Home","title":"Base.show","text":"show([io::IO = stdout], bacc::BinningAccumulator)\n\nOverload the Base.show function for human-readable displays.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, LevelAccumulator}","page":"Home","title":"Base.show","text":"show([io = stdout], lacc::LevelAccumulator)\n\nOverload Base.show for human-readable displays.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.Svalue-Tuple{LevelAccumulator, Any, Any}","page":"Home","title":"OnlineLogBinning.Svalue","text":"Svalue(lacc::LevelAccumulator)\n\nFunction to calculate the online S_1m+2 summation as:\n\nS_1m+2 = S_1m + S_m+1m+2 + fracm2(m+2)left( frac2m T_1m - T_m+1m+2 right)^2\n\nwhere T_m+1m+2 is the pairwise Tvalue for the PairAccumulator.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.Svalue-Tuple{PairAccumulator}","page":"Home","title":"OnlineLogBinning.Svalue","text":"Svalue(pacc::PairAccumulator)\n\nThe S function for a single pair following the accumulation of m data points follows as \n\nbeginaligned\nS_m+1 m+2 equiv sum_k = m+1^m+2 left( x_k - frac12 T_m+1m+2 right)^2\n\n= frac12left( x_m+2 - x_m+1 right)^2\nendaligned\n\nThus, S_m+1m+2 does not need to take T_m+1m+2 as an argument.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.Tvalue-Tuple{LevelAccumulator, Any}","page":"Home","title":"OnlineLogBinning.Tvalue","text":"Tvalue(lacc::LevelAccumulator)\n\nFunction to calculate the online T_1m+2 summation as:\n\nT_1m+2 = T_1m + T_m+1m+2\n\nwhere T_m+1m+2 is the pairwise Tvalue for the PairAccumulator.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.Tvalue-Tuple{PairAccumulator}","page":"Home","title":"OnlineLogBinning.Tvalue","text":"Tvalue(pacc::PairAccumulator)\n\nThe T function for a single pair following the accumulation of m data points follows as \n\nT_m+1 m+2 equiv sum_k = m+1^m+2 x_k = x_m+1 + x_m+2\n\nas expected.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.bin_depth-Tuple{BinningAccumulator}","page":"Home","title":"OnlineLogBinning.bin_depth","text":"bin_depth(bacc::BinningAccumulator)\n\nNumber of binned levels present. length of the [BinningAccumulator] minus 1.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.binning_level-Tuple{Int64}","page":"Home","title":"OnlineLogBinning.binning_level","text":"binning_level(index::Int)\n\nConversion from LvlAccums index to binning_level.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.reset!-Union{Tuple{BinningAccumulator{T}}, Tuple{T}} where T","page":"Home","title":"OnlineLogBinning.reset!","text":"reset!(bacc::BinningAccumulator{T})\n\nReset the BinningAccumulator by reconstruction.\n\nAdditional information\n\nWhile this is not a literal reset per se, with a large enough BinningAccumulator it will be certainly faster just to blow up the old one (in memory) and start over.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.reset!-Union{Tuple{PairAccumulator{T}}, Tuple{T}} where T","page":"Home","title":"OnlineLogBinning.reset!","text":"reset!(pacc::PairAccumulator)\n\nReturn the PairAccumulator to its initial state. Presumably one just exported the  Tvalue and Svalue from it before the reset!.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.std_error-Tuple{BinningAccumulator}","page":"Home","title":"OnlineLogBinning.std_error","text":"std_error( bacc::BinningAccumulator )\n\nOnline measurement of the [BinningAccumulator] standard error.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.std_error-Tuple{LevelAccumulator}","page":"Home","title":"OnlineLogBinning.std_error","text":"std_error( lacc::LevelAccumulator ) = sqrt(var_of_mean(lacc))\n\nOnline measurement of the [LevelAccumulator] standard error.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.update_Svalue!-Tuple{LevelAccumulator}","page":"Home","title":"OnlineLogBinning.update_Svalue!","text":"update_Svalue!(lacc::LevelAccumulator)\n\nApply the Svalue formula to update lacc.Saccum and return the PairAccumulator increment.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.update_Tvalue!-Tuple{LevelAccumulator}","page":"Home","title":"OnlineLogBinning.update_Tvalue!","text":"update_Tvalue!(lacc::LevelAccumulator)\n\nApply the Tvalue formula to update lacc.Taccum and return the PairAccumulator increment.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.update_num_bins!","page":"Home","title":"OnlineLogBinning.update_num_bins!","text":"update_num_bins!(lacc::LevelAccumulator, [incr = 2])\n\nIncrement the number of bins accumulated by incr.\n\n\n\n\n\n","category":"function"},{"location":"#OnlineLogBinning.var_of_mean-Tuple{BinningAccumulator}","page":"Home","title":"OnlineLogBinning.var_of_mean","text":"var_of_mean( bacc::BinningAccumulator; [level = 0] )\n\nOnline measurement of the [BinningAccumulator] variance of the mean.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#OnlineLogBinning.var_of_mean-Tuple{LevelAccumulator}","page":"Home","title":"OnlineLogBinning.var_of_mean","text":"var_of_mean( lacc::LevelAccumulator ) = var(lacc) / lacc.num_bins\n\nOnline measurement of the [LevelAccumulator] variance of the mean.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.mean-Tuple{BinningAccumulator}","page":"Home","title":"Statistics.mean","text":"mean( bacc::BinningAccumulator; [level = 0] )\n\nOnline measurement of the [BinningAccumulator] mean.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.mean-Tuple{LevelAccumulator}","page":"Home","title":"Statistics.mean","text":"mean( lacc::LevelAccumulator )\n\nOnline measurement of the [LevelAccumulator] mean.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.std-Tuple{BinningAccumulator}","page":"Home","title":"Statistics.std","text":"std( bacc::BinningAccumulator )\n\nOnline measurement of the [BinningAccumulator] standard deviation.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.std-Tuple{LevelAccumulator}","page":"Home","title":"Statistics.std","text":"std( lacc::LevelAccumulator ) = sqrt(var(lacc))\n\nOnline measurement of the [LevelAccumulator] standard deviation.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.var-Tuple{BinningAccumulator}","page":"Home","title":"Statistics.var","text":"var( bacc::LevelAccumulator; [level = 0] )\n\nOnline measurement of the [BinningAccumulator] variance.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.var-Tuple{LevelAccumulator}","page":"Home","title":"Statistics.var","text":"var( lacc::LevelAccumulator )\n\nOnline measurement of the [LevelAccumulator] variance.\n\nAdditional information\n\nThis quantity is considered online despite that it is not regularly updated when data is push!ed from the stream.\n\n\n\n\n\n","category":"method"}]
}
